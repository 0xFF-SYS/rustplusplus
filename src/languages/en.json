{
    "active": "Active",
    "activeCap": "ACTIVE",
    "addPlayerCap": "ADD PLAYER",
    "addSwitchCap": "ADD SWITCH",
    "afkCap": "AFK",
    "allJustOfflineTracker": "Everyone from the tracker `{tracker}` just went offline.",
    "allOfflineCap": "ALL OFFLINE",
    "alreadySubscribedToItem": "Already subscribed to item '{name}'.",
    "andMorePlayers": "... and {number} more players.",
    "anyJustOnlineTracker": "Someone from the tracker `{tracker}` just went online.",
    "anyOnlineCap": "ANY ONLINE",
    "autoturret": "Autoturret",
    "boomBox": "Boom Box",
    "bradleyApc": "Bradley APC",
    "broadcaster": "Broadcaster",
    "buttonReconnecting": "RECONNECTING",
    "cargoship": "Cargoship",
    "ceilingLight": "Ceiling Light",
    "chinook47": "Chinook 47",
    "christmasLights": "Christmas Light",
    "commandsAlarmDesc": "Operations on Smart Alarms.",
    "commandsAlarmEditDesc": "Edit the properties of a Smart Alarm.",
    "commandsAlarmEditIdDesc": "The ID of the Smart Alarm.",
    "commandsAlarmEditImageDesc": "Set the image that best represent the Smart Alarm.",
    "commandsCredentialsClearDesc": "Clear the FCM Credentials.",
    "commandsCredentialsDesc": "Set/Clear the FCM Credentials for the user account.",
    "commandsCredentialsIsSetDesc": "Is the FCM Credentials already set for this Discord Server?",
    "commandsCredentialsSetDesc": "Set the FCM Credentials.",
    "commandsHelpDesc": "Display help message.",
    "commandsLeaderDesc": "Give or take the leadership from/to a team member.",
    "commandsLeaderMemberDesc": "The name of the team member.",
    "commandsMapAllDesc": "Get the map including both monument names and markers.",
    "commandsMapCleanDesc": "Get the clean map.",
    "commandsMapDesc": "Get the currently connected server map image.",
    "commandsMapMarkersDesc": "Get the map including markers.",
    "commandsMapMonumentsDesc": "Get the map including monument names.",
    "commandsMarketDesc": "Operations for In-Game Vending Machines.",
    "commandsMarketListDesc": "Display the subscription list.",
    "commandsMarketSearchDesc": "Search for an item in Vending Machines.",
    "commandsMarketSearchIdDesc": "The ID of the item to search for.",
    "commandsMarketSearchNameDesc": "The name of the item to search for.",
    "commandsMarketSubscribeDesc": "Subscribe to an item in Vending Machines.",
    "commandsMarketSubscribeIdDesc": "The ID of the item to subscribe to.",
    "commandsMarketSubscribeNameDesc": "The name of the item to subscribe to.",
    "commandsMarketUnsubscribeDesc": "Unsubscribe from an item in Vending Machines.",
    "commandsMarketUnsubscribeIdDesc": "The ID of the item to unsubscribe from.",
    "commandsMarketUnsubscribeNameDesc": "The name of the item to unsubscribe from.",
    "commandsPlayersDesc": "Get player/players information based on Battlemetrics.",
    "commandsPlayersNameDesc": "The name or part of the name of the player.",
    "commandsResetDesc": "Reset Discord channels.",
    "commandsRoleClearDesc": "Clear the role (to allow everyone to see the rustPlusPlus channels).",
    "commandsRoleDesc": "Set/Clear a specific role that will be able to see the rustPlusPlus category content.",
    "commandsRoleSetDesc": "Set the role.",
    "commandsRoleSetRoleDesc": "The role rustPlusPlus channels will be visible to.",
    "commandsStoragemonitorDesc": "Operations on Storage Monitors.",
    "commandsStoragemonitorEditDesc": "Edit the properties of a Storage Monitor.",
    "commandsStoragemonitorEditIdDesc": "The ID of the Storage Monitor.",
    "commandsStoragemonitorEditImageDesc": "Set the image that best represent the Storage Monitor.",
    "commandsSwitchDesc": "Operations on Smart Switches.",
    "commandsSwitchEditDesc": "Edit the properties of a Smart Switch.",
    "commandsSwitchEditIdDesc": "The ID of the Smart Switch.",
    "commandsSwitchEditImageDesc": "Set the image that best represent the Smart Switch.",
    "connect": "Connect",
    "connectCap": "CONNECT",
    "connectionsCap": "CONNECTIONS",
    "container": "Container",
    "couldNotDeferInteraction": "Could not defer interaction.",
    "couldNotFindAnyPlayers": "Could not find any players.",
    "couldNotFindPlayer": "Could not find a player '{name}'.",
    "couldNotFindPlayersForThisServer": "Could not find players for this server.",
    "couldNotIdentifyMember": "Could not identify team member: {name}.",
    "crate": "Crate",
    "createGroupCap": "CREATE GROUP",
    "createTrackerCap": "CREATE TRACKER",
    "credentialsAlreadyInUse": "FCM Credentials are already used for another discord server!",
    "credentialsAreNotSet": "FCM Credentials are not currently set.",
    "credentialsAreSet": "FCM Credentials are set.",
    "credentialsClearSuccess": "FCM Credentials were cleared successfully!",
    "credentialsSetSuccess": "FCM Credentials were set successfully!",
    "customCommand": "Custom Command",
    "customTimersCap": "CUSTOM TIMERS",
    "deathCap": "DEATH",
    "decayingCap": "DECAYING",
    "disabledCap": "DISABLED",
    "discoFloor": "Discofloor",
    "disconnectCap": "DISCONNECT",
    "discordCap": "DISCORD",
    "displayingMap": "Displaying '{mapName}' map.",
    "displayingOnlinePlayers": "Displaying online players.",
    "doorController": "Door Controller",
    "editCap": "EDIT",
    "elevator": "Elevator",
    "serverStatus": "**Server Status:** {status}",
    "statusNotConnectedToServer": "**STATUS** `NOT CONNECTED TO SERVER!`",
    "statusNotElectronicallyConnected": "**STATUS** `NOT ELECTRICALLY CONNECTED!`",
    "empty": "Empty",
    "enabledCap": "ENABLED",
    "errorCap": "ERROR",
    "errorExecutingCommand": "There was an error while executing this command!",
    "eventInfo": "Event Information",
    "hbhfSensor": "HBHF Sensor",
    "heater": "Heater",
    "ignoreSetAvatar": "Ignored setAvatar",
    "ignoreSetNickname": "Ignored setNickname",
    "ignoreSetUsername": "Ignored setUsername",
    "inGameCap": "IN-GAME",
    "inGameEventInfo": "In-game event information",
    "inactiveCap": "INACTIVE",
    "infoCap": "INFO",
    "interactionInvalidChannel": "Interaction from an invalid channel.",
    "invalidGuildOrChannel": "Invalid guild or channel.",
    "invalidId": "Invalid ID: '{id}'.",
    "isDecaying": "{device} is decaying!",
    "isNoLongerConnected": "{device} is no longer electrically connected!",
    "item": "Item",
    "justSubscribedToItem": "Just subscribed to item '{name}'.",
    "largeOilRig": "Large Oil Rig",
    "largeWoodBox": "Large Wood Box",
    "leaderAlreadyLeader": "{name} is already team leader.",
    "leaderCommandIsDisabled": "Leader command is disabled in settings.",
    "leaderCommandOnlyWorks": "Leader command only works if the current leader is {name}.",
    "leaderTransferred": "Team leadership was transferred to {name}.",
    "linkCap": "LINK",
    "location": "Location",
    "loggedInAs": "LOGGED IN AS: {name}",
    "map": "Map",
    "mapSalt": "Map Salt",
    "mapSeed": "Map Seed",
    "mapSize": "Map Size",
    "message": "Message",
    "messageDeletedIn30": "This message will be deleted in 30 seconds.",
    "mutedCap": "MUTED",
    "name": "Name",
    "newsCap": "NEWS",
    "noItemFound": "Item could not be found in any Vending Machines...",
    "noItemWithIdFound": "No item with id '{id}' could be found.",
    "noItemWithNameFound": "No item with name '{name}' could be found.",
    "noNameIdGiven": "No 'name' or 'id' was given.",
    "none": "None",
    "notConnectedToRustServer": "Not currently connected to a rust server.",
    "notExistInSubscription": "Item '{name}' does not exist in subscription list.",
    "onlinePlayers": "Online Players",
    "patrolHelicopter": "Patrol Helicopter",
    "players": "Players",
    "quantity": "Quantity",
    "ratelimited": "RATELIMITED",
    "recycleCap": "RECYCLE",
    "remain": "left",
    "removePlayerCap": "REMOVE PLAYER",
    "removeSwitchCap": "REMOVE SWITCH",
    "removedSubscribeItem": "Item '{name}' have been removed from subscription.",
    "resetSuccess": "Successfully reset Discord.",
    "resultRecycling": "Result of recycling",
    "roleCleared": "rustPlusPlus role has been cleared.",
    "roleSet": "rustPlusPlus role has been set to '{name}'.",
    "samsite": "SAM site",
    "searchResult": "Search result for item: **{name}**",
    "serverInfo": "Server Information",
    "serverInvalid": "The connection to the server seems to be invalid. Try to re-pair to the server.",
    "serverJustOffline": "Server just went offline.",
    "serverJustOnline": "Server just went online.",
    "serverUsingStreamerMode": "This server is using streamer mode.",
    "showingSubscriptionList": "Showing the subscription list.",
    "sirenLight": "Siren Light",
    "smallOilRig": "Small Oil Rig",
    "smartAlarm": "Smart Alarm",
    "smartAlarmEditSuccess": "Successfully edited Smart Alarm '{name}'.",
    "smartDeviceNotFound": "{device} could not be found! Either it have been destroyed or {user} have lost tool cupboard access.",
    "smartSwitch": "Smart Switch",
    "smartSwitchEditSuccess": "Successfully edited Smart Switch '{name}'.",
    "sprinkler": "Sprinkler",
    "status": "Status",
    "statusNotFound": "**STATUS**: NOT FOUND",
    "storageMonitor": "Storage Monitor",
    "storageMonitorEditSuccess": "Successfully edited Storage Monitor '{name}'.",
    "subscriptionList": "Subscription list",
    "subscriptionListEmpty": "Item subscription list is empty.",
    "switches": "Switches",
    "teamMember": "Team Member",
    "teamMemberInfo": "Team Member Information",
    "time": "Time",
    "timeTill": "Time till {event}",
    "toolCupboard": "Tool Cupboard",
    "turnOffCap": "TURN OFF",
    "turnOnCap": "TURN ON",
    "type": "Type",
    "unavailable": "Unavailable",
    "unhandledRejection": "Unhandled Rejection: {error}",
    "unknown": "Unknown",
    "unknownInteraction": "Unknown Interaction...",
    "unmutedCap": "UNMUTED",
    "upkeep": "Upkeep",
    "userJustConnected": "{name} just connected.",
    "vendingMachine": "Vending Machine",
    "warningCap": "WARNING",
    "websiteCap": "WEBSITE",
    "wipe": "Wipe",
    "wipeDetected": "Wipe detected!",
    "couldNotGetChannelWithId": "Could not get channel with id: {id}.",
    "userSaid": "{user} said, {text}",
    "customTimerEditDesc": "Editing of Custom Timers",
    "customTimerEditCargoShipEgressLabel": "Cargoship egress time (seconds):",
    "customTimerEditBradleyRespawnLabel": "Bradley APC respawn time (seconds):",
    "customTimerEditCrateDespawnLabel": "Locked Crate despawn time (seconds):",
    "customTimerEditCrateDespawnWarningLabel": "Locked Crate despawn warning time (seconds):",
    "customTimerEditCrateOilRigUnlockLabel": "OilRig Locked Crate unlock time (seconds):",
    "editingOfDeviceDesc": "Editing of {device}",
    "smartSwitchEditNameLabel": "The name of the Smart Switch:",
    "smartSwitchEditCommandLabel": "The custom command for the Smart Switch:",
    "groupEditNameLabel": "The name of the Group:",
    "groupEditCommandLabel": "The custom command for the Group:",
    "groupAddSwitchDesc": "Add Switch to {group}",
    "groupAddSwitchIdLabel": "The Entity ID of the switch to add:",
    "groupRemoveSwitchDesc": "Remove Switch from {group}",
    "groupRemoveSwitchIdLabel": "The Entity ID of the switch to remove:",
    "smartAlarmEditNameLabel": "The name of the Smart Alarm:",
    "smartAlarmEditMessageLabel": "The message for the Smart Alarm:",
    "storageMonitorEditNameLabel": "The name of the Storage Monitor:",
    "trackerEditNameLabel": "The name of the Tracker:",
    "trackerAddPlayerDesc": "Add Player to {tracker}",
    "trackerAddPlayerIdLabel": "The SteamID of the player to add:",
    "trackerRemovePlayerDesc": "Remove Player from {tracker}",
    "trackerRemovePlayerIdLabel": "The SteamID of the player to remove:",
    "currentPrefixPlaceholder": "Current Prefix: {prefix}",
    "exlamationMark": "Exlamation Mark",
    "questionMark": "Question Mark",
    "dot": "Dot",
    "colon": "Colon",
    "comma": "Comma",
    "semicolon": "Semicolon",
    "dash": "Dash",
    "underscore": "Underscore",
    "equalsSign": "Equals Sign",
    "asterisk": "Asterisk",
    "atSign": "At Sign",
    "plusSign": "Plus Sign",
    "apostrophe": "Apostrophe",
    "hash": "Hash",
    "currencySign": "Currency Sign",
    "percentSign": "Percent Sign",
    "ampersand": "Ampersand",
    "pipe": "Pipe",
    "greaterThanSign": "Greater-than Sign",
    "lessThanSign": "Less-than Sign",
    "tilde": "Tilde",
    "circumflex": "Circumflex",
    "heart": "Heart",
    "smilyFace": "Smily Face",
    "slash": "Slash",
    "trademarkShownBeforeMessage": "{trademark} will be shown before messages.",
    "notShowingCap": "NOT SHOWING",
    "hideTrademark": "Hide trademark.",
    "currentCommandDelay": "Current Command Delay: {delay} seconds.",
    "noDelayCap": "NO DELAY",
    "noCommandDelay": "No command delay.",
    "secondCommandDelay": "{second} second command delay.",
    "secondsCommandDelay": "{seconds} seconds command delay.",
    "second": "{second} second",
    "seconds": "{seconds} seconds",
    "autoSettingCap": "AUTO SETTING: ",
    "offCap": "OFF",
    "autoDayCap": "AUTO-DAY",
    "autoNightCap": "AUTO-NIGHT",
    "smartSwitchNormal": "Smart Switch work as normal.",
    "smartSwitchAutoDay": "Smart Switch will be active only during the day.",
    "smartSwitchAutoNight": "Smart Switch will be active only during the night.",
    "couldNotFindGuild": "Could not find guild: {guildId}",
    "couldNotFindRole": "Could not find role: {roleId}",
    "couldNotFindUser": "Could not find user: {userId}",
    "couldNotFindChannel": "Could not find channel: {channel}",
    "couldNotFindCategory": "Could not find category: {category}",
    "couldNotFindMessage": "Could not find message {message}",
    "couldNotDeleteMessage": "Could not delete message: {message}",
    "couldNotCreateCategory": "Could not create category: {name}",
    "couldNotCreateTextChannel": "Could not create text channel: {name}",
    "couldNotPerformBulkDelete": "Could not perform bulkDelete on channel: {channel}",
    "couldNotPerformMessagesFetch": "Could not perform messages fetch on channel: {channel}",
    "couldNotPerformMessageDelete": "Could not perform message delete",
    "couldNotRegisterSlashCommands": "Could not register Slash Commands for guild: {guildId}. ",
    "makeSureApplicationsCommandsEnabled": "Make sure applications.commands is checked when creating the invite URL.",
    "slashCommandsSuccessRegister": "Successfully registered application commands for guild: {guildId}.",
    "couldNotSetParent": "Could not set parent for channel: {channelId}",
    "selectInGamePrefixSetting": "Select what in-game command prefix that should be used:",
    "selectTrademarkSetting": "Select which trademark that should be shown in every in-game message.",
    "shouldCommandsEnabledSetting": "Should in-game commands be enabled?",
    "shouldBotBeMutedSetting": "Should the bot be muted in-game?",
    "inGameTeamNotificationsSetting": "In-Game teammate notifications.",
    "commandDelaySetting": "Should there be a command delay? How long?",
    "shouldSmartAlarmNotifyNotConnectedSetting": "Should Smart Alarms notify even if they are not setup on the connected rust server?",
    "noteCap": "NOTE",
    "smartAlarmNotifyExtendSetting": "- These Alarm notifications will use the title and message given to the Smart Alarm in-game.\n- These Smart Alarms might not be available in the alarms text channel in discord.",
    "shouldSmartAlarmsNotifyInGameSetting": "Should Smart Alarms notify In-Game?",
    "shouldLeaderCommandEnabledSetting": "Should the leader command be enabled?",
    "whenTrackersNotifySetting": "When should the Battlemetrics trackers notify?",
    "mapWipeDetectedNotifySetting": "When Map Wipe is detected, should {group} be notified?",
    "cargoShipDetectedSetting": "When Cargo Ship is detected, send a notification.",
    "cargoShipLeftSetting": "When Cargo Ship left the map, send a notification.",
    "cargoShipEgressSetting": "When Cargo Ship enters egress stage, send a notification.",
    "patrolHelicopterDetectedSetting": "When Patrol Helicopter is detected, send a notification.",
    "patrolHelicopterLeftSetting": "When Patrol Helicopter left the map, send a notification.",
    "patrolHelicopterDestroyedSetting": "When Patrol Helicopter gets destroyed, send a notification.",
    "bradleyApcDestroyedSetting": "When Bradley APC gets destroyed, send a notification.",
    "bradleyApcShouldRespawnSetting": "When Bradley APC should respawn, send a notification.",
    "lockedCrateSpawnCargoShipSetting": "When a Locked Crate spawns on Cargo Ship, send a notification.",
    "lockedCrateRespawnOilRigSetting": "When a Locked Crate respawns at Oil Rig, send a notification.",
    "lockedCrateDroppedAtMonumentSetting": "When a Locked Crate gets dropped at a monument, send a notification.",
    "lockedCrateLeftCargoShipSetting": "When a Locked Crate disappears from Cargo Ship, send a notification.",
    "lockedCrateLootedOilRigSetting": "When a Locked Crate gets looted at Oil Rig, send a notification.",
    "lockedCrateMonumentLeftSetting": "When a Locked Crate disappears from a monument, send a notification.",
    "lockedCrateMonumentDespawnWarningSetting": "When a Locked Crate at a monument is about to despawn, send a notification.",
    "lockedCrateOilRigUnlockedSetting": "When a Locked Crate at Oil Rig is unlocked, send a notification.",
    "lockedCrateOilRigRefreshedSetting": "When a Locked Crate at Oil Rig gets refreshed, send a notification.",
    "heavyScientistCalledSetting": "When Heavy Scientists are called to Oil Rig, send a notification.",
    "chinook47DetectedSetting": "When a Chinook 47 enters the map, send a notification.",
    "vendingMachineDetectedSetting": "When a new Vending Machine is detected, send a notification.",
    "noCommunicationSmartSwitch": "Could not communicate with Smart Switch: {name}",
    "onCap": "ON",
    "deviceIsCurrentlyOnOff": "{device} is currently {status}.",
    "deviceWasTurnedOnOff": "{device} was turned {status}.",
    "automaticallyTurnBackOnOff": " Automatically turned back {status} in {time}.",
    "automaticallyTurningBackOnOff": "Automatically turning {device} back {status}.",
    "notFoundCap": "NOT FOUND",
    "turningGroupOnOff": "Turning Group {group} {status}.",
    "playerLeftTheTeam": "{name} left the team.",
    "playerJoinedTheTeam": "{name} joined the team.",
    "playerJustDied": "{name} just died at {location}.",
    "playerJustWentAfk": "{name} just went AFK.",
    "playerJustReturned": "{name} just returned ({time}).",
    "playerJustConnected": "{name} just connected.",
    "playerJustDisconnected": "{name} just disconnected.",
    "playerJustConnectedTo": "{name} just connected to {server}.",
    "playerJustDisconnectedFrom": "{name} just disconnected from {server}.",
    "invalidTimeDistance": "Invalid time distance: {distance}, prev: {prevTime}, new: {newTime}",
    "timeCap": "TIME",
    "24HoursInGameTimePassed": "24 Successful hours in-game time have passed.",
    "connectedCap": "CONNECTED",
    "connectedToServer": "CONNECTED TO SERVER.",
    "somethingWrongWithConnection": "Something went wrong with connection.",
    "rustplusOperational": "RUSTPLUS OPERATIONAL.",
    "connectingCap": "CONNECTING",
    "connectingToServer": "CONNECTING TO SERVER...",
    "disconnectedCap": "DISCONNECTED",
    "disconnectedFromServer": "DISCONNECTED FROM SERVER.",
    "reconnectingCap": "RECONNECTING",
    "reconnectingToServer": "RECONNECTING TO SERVER...",
    "couldNotConnectTo": "Could not connect to: {id}.",
    "connectionRefusedTo": "Connection refused to: {id}.",
    "websocketClosedBeforeConnection": "WebSocket was closed before the connection was established."
}